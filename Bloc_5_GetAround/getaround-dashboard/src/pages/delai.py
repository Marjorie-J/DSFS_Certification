import plotly.graph_objects as go
import streamlit as st

from utils.common import load_data, plot_checkin_thresholds


st.markdown("# Recherche d'un seuil : d√©lai minimum entre 2 locationsüî¨")

st.markdown("""Chaque location rendue en retard met potentiellement en danger la location suivante.

Une fonctionnalit√© imposant un d√©lai minimum entre deux r√©servations peut absorber ce retard et √©viter l‚Äôannulation ou la d√©gradation de l‚Äôexp√©rience du prochain locataire.

- üõü Si le retard est inf√©rieur au d√©lai minimum, la location suivante peut √™tre sauv√©e (le d√©lai absorbe le retard). 

- ‚õî Si le retard est sup√©rieur au d√©lai minimum, la location suivante serait encore √† risque. """)


# Load data
data_getaround = load_data()

st.markdown("#### Combien de cas probl√©matiques seraient r√©solus en fonction du seuil choisi et du type de location ?")

# Je vais tester plusieurs seuils : de 5 minutes √† 100 minutes, toutes les 5 minutes
thresholds = list(range(0, 105, 5))

plot_checkin_thresholds(
    data=data_getaround,
    thresholds=thresholds,
    column="overlap",
    y_label="Nombre de locations affect√©es",
    title="Nombre de locations probl√©matiques affect√©es par type de checkin selon le seuil",
    percentage=False
)

# Nombre de cas probl√©matiques 
has_pb = (data_getaround["problem"] == True)
percent_problem = has_pb.sum() / data_getaround.shape[0] * 100

st.markdown(f"""
            ‚ö†Ô∏è Pour rappel c'est un √©chantillon de {percent_problem:.2f}% des donn√©es totales.
            
            *Cet √©chantillon est faible et ne me permet pas de tirer de conclusion.*
            """)

st.markdown("üìä Afin d'avoir un √©chantillon plus important, analysons l'ensemble des locations, selon le retard au retour de location.")


st.divider()


st.subheader("Combien de locations seraient affect√©es en fonction du seuil choisi et du type de location ?")
st.subheader("Quelle part de revenus serait affect√©e par cette nouvelle fonctionnalit√© ?")

plot_checkin_thresholds(
    data=data_getaround,
    thresholds=thresholds,
    column="delay_at_checkout_in_minutes",
    y_label="Nombre de locations affect√©es",
    title="NOMBRE de locations affect√©es par type de checkin selon le seuil",
    percentage=False
)

plot_checkin_thresholds(
    data=data_getaround,
    thresholds=thresholds,
    column="delay_at_checkout_in_minutes",
    y_label="Pourcentage de locations sauv√©es",
    title="POURCENTAGE de locations sauv√©es par type de checkin selon le seuil",
    percentage=True
)



st.markdown("""On constate que type checkin `mobile` est beaucoup plus concern√© par les retards que Connect.
        
Un seuil mis en place sur ce type de checkin permettrai d'absorber une part importante des retards :` 82%` . """)

